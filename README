SRM Electronic Health Records (EHR) System
A modern, role-based Electronic Health Records (EHR) web application built with Streamlit and MySQL. This system provides dedicated portals for patients, doctors, and hospital administrators, enabling functionalities such as appointment scheduling, health report management, prescription tracking, and more.
________________________________________
üöÄ Features
‚Ä¢	Role-Based Access Control: Separate dashboards for Admin, Doctor, and Patient roles.
‚Ä¢	User Authentication: Secure login and signup processes with password reset functionality.
‚Ä¢	Appointment Management: Patients can book appointments; doctors can view and manage their schedules.
‚Ä¢	Medical Reports: Upload and view medical reports securely.
‚Ä¢	Prescription Handling: Doctors can add prescriptions; patients can view their prescribed medications.
‚Ä¢	Chatbot Assistance: Integrated chatbot to assist users with common queries.
‚Ä¢	Admin Controls: Manage users, view system analytics, and oversee overall operations.
________________________________________
üõ†Ô∏è Tech Stack
‚Ä¢	Frontend: Streamlit
‚Ä¢	Backend: Python
‚Ä¢	Database: MySQL Railway cloud service
‚Ä¢	Authentication: Custom implementation using MySQL
‚Ä¢	Chatbot: Rule-based chatbot integrated within Streamlit
________________________________________
‚öôÔ∏è Setup Instructions
1.	Clone the Repository
2.	git clone https://github.com/Kiruthikap0208/advance_streamlit_ehr.git
3.	cd advance_streamlit_ehr
4.	Set Up the Virtual Environment
5.	python -m venv venv
6.	source venv/bin/activate  # On Windows: venv\Scripts\activate
7.	Install Dependencies
8.	pip install -r requirements.txt
9.	Configure the Database
   o	Ensure MySQL is installed and running.
   o	Create a database named srm_ehr.
   o	Import the schema:
   o	mysql -u root -p srm_ehr < srm_ehr_schema.sql
   o	(Optional) Populate with dummy data:
   o	mysql -u root -p srm_ehr < dummy_data.sql
10.	Run the Application
11.	streamlit run main.py
________________________________________
üìã Database Schema
The database schema includes the following tables:
‚Ä¢	appointments
‚Ä¢	approved_admins
‚Ä¢	approved_doctors
‚Ä¢	approved_patients
‚Ä¢	departments
‚Ä¢	patients
‚Ä¢	prescriptions
‚Ä¢	reports
‚Ä¢	users
________________________________________
üë©‚Äçüíª Author
‚Ä¢	Name: Kiruthika P
‚Ä¢	GitHub: @Kiruthikap0208

